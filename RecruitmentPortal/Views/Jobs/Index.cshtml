@model PaginatedList<RecruitmentPortal.Models.Job>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Jobs</h1>
<br />

@if (User.IsInRole(Strings.Auth.Roles.Administrator))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

@{
    if (Model.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Responsibilities</th>
                    <th>Skills</th>
                    <th>Category</th>
                    <th>Valid from</th>
                    <th>Valid until</th>
                    <th>Maximum applicants</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.Responsibilities)</td>
                        <td>@Html.DisplayFor(modelItem => item.Skills)</td>
                        <td>@Html.DisplayFor(modelItem => item.Category)</td>
                        <td>@Html.DisplayFor(modelItem => item.ValidFrom)</td>
                        <td>@Html.DisplayFor(modelItem => item.ValidUntil)</td>
                        <td>@Html.DisplayFor(modelItem => item.MaxApplicants)</td>
                        <td>
                            @if (User.IsInRole(Strings.Auth.Roles.Administrator))
                            {
                                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a><span> | </span>
                                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a><span> | </span>
                                <a asp-action="Details" asp-route-id="@item.ID">Applications</a><span> | </span>
                            }
                            <a asp-action="Apply" asp-route-id="@item.ID">Apply</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";

        <a asp-action="Index"
        asp-route-page="@(Model.PageIndex - 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
        asp-route-page="@(Model.PageIndex + 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-default @nextDisabled">
            Next
        </a>
    }
    else
    {
        <h3>No jobs available</h3>
    }
}